<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on lihui7800</title>
    <link>https://lihui7800.github.io/tags/http/</link>
    <description>Recent content in Http on lihui7800</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 04 Mar 2019 19:33:33 +0800</lastBuildDate>
    
	<atom:link href="https://lihui7800.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>http 302跳转的思考</title>
      <link>https://lihui7800.github.io/golang/http_302/</link>
      <pubDate>Mon, 04 Mar 2019 19:33:33 +0800</pubDate>
      
      <guid>https://lihui7800.github.io/golang/http_302/</guid>
      <description>302 处理 首先需要明白 302 这个状态是啥意思。
 302重定向又称之为302代表暂时性转移(Temporarily Moved )，英文名称：302 redirect。 也被认为是暂时重定向（temporary redirect），一条对网站浏览器的指令来显示浏览器被要求显示的不同的URL，当一个网页经历过短期的URL的变化时使用。一个暂时重定向是一种服务器端的重定向，能够被搜索引擎蜘蛛正确地处理。   声明这来自百度百科。 简单来说就是一个变更请求地址的方法。最初应该是用来解决一些网站的地址变更。 其实很多时候是不用处理的。  虽然很多时候不用处理，但显然我们不会这样，我们面对的问题是需要处理的。我遇到的大体分为一下几种情况。
1.通过302跳转进行文件发送。很多时候应该是header里面多了一个配置，用来存放文件名。
Content-Disposition: attachment;filename=&amp;quot;5A723D82CB3FB14EA84B13D59684236E.zip&amp;quot; Content-Type: application/zip; charset=UTF-8  这样的做法是为了下载zip的压缩文件。（应该还有很多的文件格式）
2.有些重要的数据是不希望能够很顺利的让用户获取的，这时需要一些跳转验证之类的动作，302也就成了必选的返回状态了。最熟知的就是淘宝的网站了，百度也有。
突然发现可以通过302可以在网站入口起到一定的分流作用。减轻了首页的压力同时还保护了自己。至少搜索引擎会保留首页地址而忽略真实的链接地址。</description>
    </item>
    
  </channel>
</rss>